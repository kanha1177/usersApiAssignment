{"version":3,"sources":["logo.svg","components/Posts.jsx","App.js","reportWebVitals.js","index.js"],"names":["Posts","useState","posts","setPosts","paginatedPosts","setpaginatedPosts","useEffect","axios","get","then","res","console","log","data","_","slice","take","value","pageCount","Math","ceil","length","pages","range","className","map","post","index","id","email","first_name","last_name","avatar","page","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAAe,I,oDC4DAA,EAxDD,WACV,MAAuBC,qBAAvB,mBAAOC,EAAP,KAAaC,EAAb,KACD,EAA2CF,qBAA3C,mBAAOG,EAAP,KAAsBC,EAAtB,KACCC,qBAAU,WACPC,IAAMC,IAAI,sCAAsCC,MAAK,SAACC,GAClDC,QAAQC,IAAIF,EAAIG,MAChBV,EAASO,EAAIG,KAAKA,MAClBR,EAAkBS,IAAEJ,EAAIG,KAAKA,MAAME,MAAM,GAAGC,KARvC,GAQsDC,cAE/D,IAEH,IAAMC,EAAYhB,EAAOiB,KAAKC,KAAKlB,EAAMmB,OAZ7B,GAYgD,EAC3D,GAAiB,IAAdH,EAAiB,OAAO,KAC3B,IAAMI,EAAQR,IAAES,MAAM,EAAEL,EAAU,GACnC,OACI,gCAEMd,EACG,wBAAOoB,UAAU,QAAjB,UACI,gCACI,+BACI,oCACA,uCACA,4CACA,2CACA,6CAGR,gCACKpB,EAAeqB,KAAI,SAACC,EAAOC,GAAR,OACZ,+BACI,6BAAKD,EAAKE,KACV,6BAAKF,EAAKG,QACV,6BAAKH,EAAKI,aACV,6BAAKJ,EAAKK,YACV,6BAAKL,EAAKM,WALLL,WAbV,gBA0BpB,qBAAKH,UAAU,gCAAf,SACI,oBAAIA,UAAU,aAAd,SAEQF,EAAMG,KAAI,SAACQ,GAAD,OACN,oBAAIT,UAAU,YAAd,SAA2BS,eCvCxCC,MATf,WACE,OACE,qBAAKV,UAAU,MAAf,SACG,cAAC,EAAD,OCMQW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4fad4fc2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useEffect,useState} from 'react'\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\"\r\nconst pageSize =6;\r\nconst Posts = () => {\r\n    const [posts,setPosts]=useState()\r\n   const [paginatedPosts,setpaginatedPosts] = useState();\r\n    useEffect(() => {\r\n       axios.get('https://reqres.in/api/users?page=2').then((res)=>{\r\n           console.log(res.data)\r\n           setPosts(res.data.data);\r\n           setpaginatedPosts(_(res.data.data).slice(0).take(pageSize).value());\r\n       });\r\n    }, []);\r\n \r\n    const pageCount = posts? Math.ceil(posts.length/pageSize) : 0;\r\n     if(pageCount === 0) return null;\r\n     const pages = _.range(1,pageCount+1)\r\n    return (\r\n        <div>\r\n            {\r\n             !paginatedPosts ? (\"No Data Found\"):(\r\n                 <table className=\"table\">\r\n                     <thead>\r\n                         <tr>\r\n                             <th>ID</th>\r\n                             <th>Email</th>\r\n                             <th>First_NAme</th>\r\n                             <th>Last_Name</th>\r\n                             <th>Avatar</th> \r\n                         </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                         {paginatedPosts.map((post , index) => (\r\n                                 <tr key={index}>\r\n                                     <td>{post.id}</td>\r\n                                     <td>{post.email}</td>\r\n                                     <td>{post.first_name}</td>\r\n                                     <td>{post.last_name}</td>\r\n                                     <td>{post.avatar}</td>\r\n                                     </tr>\r\n                             ))\r\n                         }\r\n                     </tbody>\r\n                 </table>\r\n             )   \r\n            }\r\n            <nav className=\"d-flex justify-content-center\">\r\n                <ul className=\"pagination\">\r\n                    {\r\n                        pages.map((page)=>(\r\n                            <li className=\"page-link\">{page}</li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Posts from './components/Posts';\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Posts />\n \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport  'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}